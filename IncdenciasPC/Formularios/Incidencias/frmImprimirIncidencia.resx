<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>