<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AFvQuQMVS+OCAAAAAElFTkSuQmCC
</value>
  </data>
</root>